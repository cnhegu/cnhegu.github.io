# .github/workflows/deploy.yml
name: Deploy GitHub Pages

on:
  # 当代码被推送到 main 分支时，自动执行此工作流程
  push:
    branches:
      - main
      
  # 允许你在 GitHub Actions 页面手动点击按钮来触发
  workflow_dispatch:

jobs:
  build-and-deploy:
    # 任务运行在最新版的 Ubuntu 虚拟机上
    runs-on: ubuntu-latest
    
    # 并发设置：确保同一时间只有一个部署任务在运行，新的任务会取消旧的
    concurrency:
      group: "pages"
      cancel-in-progress: true
      
    steps:
      # 第 1 步：检出（下载）你的仓库代码
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          # ✅ 启用子模块拉取
          submodules: true
          # ✅ 拉取完整的 Git 历史记录
          fetch-depth: 0
          
          # 【新添加的关键配置】
          # 强制使用 SSH 密钥进行认证，解决子模块拉取失败问题。
          # 你必须在 GitHub Secrets 中设置一个名为 ACTIONS_SSH_KEY 的 Secret。
          ssh-key: ${{ secrets.ACTIONS_SSH_KEY }}
          # 禁用严格主机密钥检查，以避免不必要的连接错误。
          ssh-strict: false

      # 第 2 步：安装 Hugo 环境
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # 第 3 步：运行 hugo 命令，生成静态网站文件
      - name: Build with Hugo
        run: hugo

      # 第 4 步：将生成的 public 文件夹部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          cname: www.hegu.me